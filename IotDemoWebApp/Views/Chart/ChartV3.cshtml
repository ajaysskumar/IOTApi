@model IotDemoWebApp.Models.ChartModel

@{
    ViewBag.Title = "Chart";
}

<h2>Chart</h2>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.js"></script>


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<style>
    .avg_data {
        color: blue;
        font-size: x-large;
        font-family: Consolas;
    }
</style>


<div class="row">
    <div class="col-md-2">
        <label>Select interval(e.g. Past 2 hours)</label>
    </div>
    <div class="col-md-2">
        <input type="number" value="@Model.TimeFrame" class="form-control" id="txtNumber" />
    </div>
    <div class="col-md-2">
        <button id="btnChangeDatasetTime" class="btn btn-primary">Change</button>
    </div>
    <div class="col-md-1">
        <button id="btnRefresh" class="btn btn-primary ">
            <span class="glyphicon glyphicon-refresh"></span>
        </button>
    </div>
    <div class="col-md-2">
        <label>Select Device</label>
    </div>
    <div class="col-md-3">
        <select class="form-control" id="ddlDevice">
            @if (Model.Sensors != null && Model.Sensors.Count > 0)
            {
                foreach (var sensor in Model.Sensors)
                {
                    if (sensor.Id.ToLower() == Model.SelectedDeviceId.ToLower())
                    {
                        <option selected="selected" value="@sensor.Id" id="@sensor.Id">@sensor.DeviceName</option>
                    }
                    else
                    {
                        <option value="@sensor.Id" id="@sensor.Id">@sensor.DeviceName</option>
                    }

                }
            }

        </select>
    </div>
</div>
<br />
<div class="row" hidden="hidden">
    <div class="col-md-3">
        <label>Set Mode of Datapoints(1 for aggregated 2 for all)</label>
    </div>
    <div class="col-md-2">
        <input type="number" value="1" max="2" min="1" class="form-control" id="txtMode" />
    </div>
    <div class="col-md-2">
        <button class="btn btn-primary">Change</button>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-6">
        <label>Average Temperature</label>
        <label class="avg_data" id="lbl_t"></label>
    </div>
    <div class="col-md-6">
        <label>Average Humidity</label>
        <label class="avg_data" id="lbl_h"></label>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-6">
        @*<canvas id="temperature" width="1200" height="800"></canvas>*@
        <div id="curve_chart" style="width: 900px; height: 500px"></div>
    </div>
    <div class="col-md-6">
        <canvas id="humidity" width="1200" height="800"></canvas>
    </div>
</div>


<script>

    var temperature = $("#temperature");
    var humidity = $("#humidity");
    var isPageLoaded = false;

    var labelset = [];

    var t_dataset = [];
    var h_dataset = [];

    var t_labelset = [];
    var h_labelset = [];

    var average_t = 0;
    var average_h = 0;


    var last_record = 0;

    var myChartTemp;
    var myChartHumid;
    var url = '';
    var chartState = 1;

    $(document).ready(function () {

        var time = moment();
        console.log(time);
        
        $("#ddlDevice").change(function () {
            labelset = [];
            t_dataset = [];
            h_dataset = [];

            myChartTemp.data.labels = [];
            myChartTemp.data.datasets[0].data = [];

            myChartHumid.data.labels = [];
            myChartHumid.data.datasets[0].data = [];

            last_record = 0;
            chartState = 1;

            window.location.href = 'ChartV2' + encodeURI('?sensorId=' + $('#ddlDevice :selected').val() + '&timeFrame=' + $('#txtNumber').val());

            switch ($('#txtMode').val()) {
                case '1': url = '/api/gettop'; break;
                case '2': url = '/api/getdatapointspartial'; break;
                default: url = '/api/gettopdatapoints'; break;
            }
        });
        $('#txtMode').change(function () {
            switch ($('#txtMode').val()) {
                case '1': url = '/api/gettop'; break;
                case '2': url = '/api/getdatapointspartial'; break;
                default: url = '/api/gettopdatapoints'; break;
            }
        });
        $('#btnChangeDatasetTime').click(function () {
            window.location.href = 'ChartV2' + encodeURI('?sensorId=' + $('#ddlDevice :selected').val() + '&timeFrame=' + $('#txtNumber').val());
            //updateCharts();
            console.log('Charts updated');
        });
        $('#btnRefresh').click(function () {
            updateCharts();
            console.log('Charts updated');
        });

        function createChartTemperature() {

            switch ($('#txtMode').val()) {
                case '1': url = '/api/getdatapointspartial'; break;
                case '2': url = '/api/getdatapointspartial'; break;
                default: url = '/api/gettopdatapoints'; break;
            }

            var currentDeviceSelected = $('#ddlDevice :selected').val();

            var dataQuery = { top: $('#txtNumber').val(), lastRecord: last_record, sensorId: $('#ddlDevice :selected').attr('id') };

            console.log(dataQuery);

            $.ajax({
                url: url,
                type: 'GET',
                data: dataQuery,
                async: true,
                success: function (response) {
                    var temperatureData = [];
                    var humidityData = [];
                    var labelsData = [];

                    var gdata = [];
                    var gheaderElement = new Array();
                    gheaderElement = ['Time', 'Temperature', 'Humidity'];

                    gdata.push(gheaderElement);

                    $.each(response,
                        function (i, e) {
                            var gdataElement = new Array();
                            gdataElement.push(new Date(e.Timestamp).toLocaleString());
                            gdataElement.push(e.MotionValue);
                            gdataElement.push(e.MotionTime);
                            gdata.push(gdataElement);
                        });

                    google.charts.load('current', { 'packages': ['corechart'] });
                    google.charts.setOnLoadCallback(drawChart);

                    function drawChart() {
                        var data = google.visualization.arrayToDataTable(gdata);

                        var options = {
                            title: 'Company Temperature/Humidity',
                            curveType: 'function',
                            legend: { position: 'bottom' }
                        };

                        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));

                        chart.draw(data, options);
                    }

                    //$('#lbl_t').text(set_average(myChartTemp.data.datasets[0].data) + "℃");
                    //$('#lbl_h').text(set_average(myChartHumid.data.datasets[0].data) + "%");
                }
            });
        }

        console.log('Creating chart...');
        createChartTemperature();

        console.log('Created chart...');

        function updateCharts() {

            console.log('inside updateCharts...');

            //myChartTemp.data.labels = [];
            //myChartTemp.data.datasets[0].data = [];

            //myChartHumid.data.labels = [];
            //myChartHumid.data.datasets[0].data = [];

            var queryData = { sensorId: $('#ddlDevice :selected').attr('id') };

            console.log(queryData);

            $.ajax({
                url: '/api/readdatapoints',
                type: 'GET',
                data: queryData,
                async: true,
                success: function (response) {
                    $.each(response,
                        function (i, e) {

                            console.log('chart state = 2');
                            var date = new Date(e.Timestamp);
                            //labelset.push(date.toLocaleString());
                            if (myChartTemp.data.labels.length > 20) {
                                myChartTemp.data.labels.splice(0, 1);
                                myChartTemp.data.datasets[0].data.splice(0, 1);

                                myChartHumid.data.labels.splice(0, 1);
                                myChartHumid.data.datasets[0].data.splice(0, 1);
                            }

                            console.log(myChartTemp.data.labels.length);
                            console.log(myChartTemp.data.datasets[0].data.length);


                            myChartTemp.data.labels.push(date.toLocaleString());
                            myChartTemp.data.datasets[0].data.push(e.MotionValue);

                            myChartHumid.data.labels.push(date.toLocaleString());
                            myChartHumid.data.datasets[0].data.push(e.MotionTime);

                            last_record = e.Id;

                        });

                    chartState = 2;

                    $('#lbl_t').text(set_average(myChartTemp.data.datasets[0].data) + "℃");
                    $('#lbl_h').text(set_average(myChartHumid.data.datasets[0].data) + "%");


                    myChartTemp.update();
                    myChartHumid.update();
                }
            });
        };
        function set_average(datasets) {
            var total_sum_data = 0;
            var count = datasets.length;
            $.each(datasets, function (i, e) {
                total_sum_data += Number(e);
            });

            var avg_data = total_sum_data / count;
            return avg_data.toFixed(2);
        }

        //setInterval(updateCharts, 10 * 1000);
    });

</script>
